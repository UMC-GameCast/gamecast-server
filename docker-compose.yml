version: '3.8'

services:
  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    container_name: gamecast-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: gamecast123
      MYSQL_DATABASE: gamecast
      MYSQL_USER: gamecast_user
      MYSQL_PASSWORD: gamecast_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./database/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - gamecast-network

  # GameCast API 서버
  gamecast-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gamecast-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: gamecast_user
      DB_PASSWORD: gamecast_password
      DB_NAME: gamecast
      FRONTEND_URL: http://localhost:3000
      JWT_SECRET: your_super_secret_jwt_key_for_docker
      LOG_LEVEL: info
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - gamecast-network

  # 테스트 클라이언트 (선택적)
  test-client:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: gamecast-test
    environment:
      SERVER_URL: http://gamecast-api:3000
    depends_on:
      gamecast-api:
        condition: service_healthy
    profiles:
      - test
    networks:
      - gamecast-network

  # Nginx (리버스 프록시, 선택적)
  nginx:
    image: nginx:alpine
    container_name: gamecast-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - gamecast-api
    profiles:
      - production
    networks:
      - gamecast-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  gamecast-network:
    driver: bridge